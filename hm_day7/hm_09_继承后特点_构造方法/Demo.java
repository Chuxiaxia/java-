package hm_day7.hm_09_继承后特点_构造方法;
/*
        一个类不写构造方法会怎么样?
            默认赠送一个无参构造
            public 类名() {
            }

    按如下需求定义类:
        1.人类
            成员变量: 姓名,年龄
            成员方法: 吃饭
        2.学生类
            成员变量: 姓名,年龄,成绩
            成员方法: 吃饭

        当有了继承关系后子类构造方法会怎么样?(重点)
            先走父类的无参构造,在走子类构造方法

        为什么要走父类构造方法? (了解)
            父类中可能会有成员变量,需要通过父类的构造方法给成员变量赋值

        为什么走父类无参构造? (了解)
            Java是95就设计好的,它不知道我们今天会有怎么的有参构造,
            无参构造语法是固定的,而且一个类不写构造方法都会有无参构造

        子类的构造方法是如何去调用父类的无参构造?
            在子类构造方法第一行默认有:super();

小结:
    当有了继承关系后子类构造方法会怎么样?
        先走父类无参构造方法,再走子类的构造方法

    子类有参构造怎么处理?
        子类有参调用父类的有参构造,自己的成员变量自己赋值
 */
public class Demo {
    public static void main(String[] args) {
         /*
            父类无参构造
            子类无参构造
         */
       // Student s = new Student();
        /*
            父类无参构造
            子类有参构造
         */
        Student s2 = new Student("ajl", 18, 99);
        System.out.println(s2.getName() + ":" + s2.getAge() + ":" + s2.getScore());
    }
}
